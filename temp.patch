diff --git a/src/main/plugin/iso19115-3/index-fields/common.xsl b/src/main/plugin/iso19115-3/index-fields/common.xsl
index 7b40d2a..730c36d 100644
--- a/src/main/plugin/iso19115-3/index-fields/common.xsl
+++ b/src/main/plugin/iso19115-3/index-fields/common.xsl
@@ -1,5 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 <xsl:stylesheet version="2.0"
+                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 xmlns:cit="http://standards.iso.org/19115/-3/cit/1.0"
                 xmlns:dqm="http://standards.iso.org/19157/-2/dqm/1.0"
                 xmlns:gco="http://standards.iso.org/19115/-3/gco/1.0"
@@ -19,14 +21,12 @@
                 xmlns:gfc="http://standards.iso.org/19110/gfc/1.1"
                 xmlns:geonet="http://www.fao.org/geonetwork"
                 xmlns:util="java:org.fao.geonet.util.XslUtil"
-                xmlns:xs="http://www.w3.org/2001/XMLSchema"
-                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
+                xmlns:joda="java:org.fao.geonet.domain.ISODate"
                 xmlns:gn-fn-iso19115-3="http://geonetwork-opensource.org/xsl/functions/profiles/iso19115-3"
                 xmlns:skos="http://www.w3.org/2004/02/skos/core#"
                 exclude-result-prefixes="#all">
 
 
-  <xsl:include href="../convert/functions.xsl"/>
   <xsl:include href="../layout/utility-tpl-multilingual.xsl"/>
   <xsl:include href="index-subtemplate-fields.xsl"/>
 
@@ -37,6 +37,8 @@
   <!-- Enable INSPIRE or not -->
   <xsl:param name="inspire">false</xsl:param>
 
+  <xsl:variable name="df">[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]</xsl:variable>
+
   <!-- If identification citation dates
     should be indexed as a temporal extent information (eg. in INSPIRE
     metadata implementing rules, those elements are defined as part
@@ -62,10 +64,16 @@
                             mdb:metadataIdentifier[1]/
                             mcc:MD_Identifier/mcc:code/*"/>
 
-  <!-- Get the language -->
-  <xsl:variable name="documentMainLanguage">
-    <xsl:call-template name="langId19115-3"/>
-  </xsl:variable>
+  <!-- Get the language
+      If not set, the default will be english.
+  -->
+  <xsl:variable name="defaultLang">eng</xsl:variable>
+
+  <xsl:variable name="documentMainLanguage"
+                select="if ($metadata/mdb:defaultLocale/lan:PT_Locale/lan:language/lan:LanguageCode/@codeListValue != '')
+                        then $metadata/mdb:defaultLocale/lan:PT_Locale/lan:language/lan:LanguageCode/@codeListValue
+                        else $defaultLang"/>
+
 
 
 
@@ -149,6 +157,53 @@
   </xsl:function>
 
 
+  <!-- Grab the default title which will
+  be added to all document in the index
+  whatever the langugae. -->
+  <xsl:template name="defaultTitle">
+    <xsl:param name="isoDocLangId"/>
+
+    <xsl:variable name="poundLangId"
+                  select="concat('#',upper-case(util:twoCharLangCode($isoDocLangId)))" />
+
+    <xsl:variable name="identification"
+                  select="$metadata/mdb:identificationInfo/*"/>
+    <xsl:variable name="docLangTitle"
+                  select="$identification/mri:citation/*/cit:title//lan:LocalisedCharacterString[@locale = $poundLangId]"/>
+    <xsl:variable name="charStringTitle"
+                  select="$identification/mri:citation/*/cit:title/gco:CharacterString"/>
+    <xsl:variable name="locStringTitles"
+                  select="$identification/mri:citation/*/cit:title//lan:LocalisedCharacterString"/>
+    <xsl:choose>
+      <xsl:when test="string-length(string($docLangTitle)) != 0">
+        <xsl:value-of select="$docLangTitle[1]"/>
+      </xsl:when>
+      <xsl:when test="string-length(string($charStringTitle[1])) != 0">
+        <xsl:value-of select="string($charStringTitle[1])"/>
+      </xsl:when>
+      <xsl:otherwise>
+        <xsl:value-of select="string($locStringTitles[1])"/>
+      </xsl:otherwise>
+    </xsl:choose>
+  </xsl:template>
+
+
+  <!-- Format a date. If null, unknown, current, now return
+  the current date time.
+  -->
+  <xsl:function name="gn-fn-iso19115-3:formatDateTime" as="xs:string">
+    <xsl:param name="value" as="xs:string"/>
+
+    <xsl:choose>
+      <xsl:when test="$value='' or lower-case($value)='unknown' or lower-case($value)='current' or lower-case($value)='now'">
+        <xsl:value-of select="format-dateTime(current-dateTime(),$df)"/>
+      </xsl:when>
+      <xsl:otherwise>
+        <xsl:value-of select="joda:parseISODateTime($value)"/>
+      </xsl:otherwise>
+    </xsl:choose>
+  </xsl:function>
+
 
   <xsl:template name="CommonFieldsFactory">
     <xsl:param name="lang" select="$documentMainLanguage"/>
@@ -255,15 +310,12 @@
 
         <xsl:for-each select="mri:temporalElement/gex:EX_TemporalExtent/gex:extent">
           <xsl:for-each select="gml:TimePeriod">
-            <xsl:variable name="times">
-              <xsl:call-template name="newGmlTime">
-                <xsl:with-param name="begin" select="gml:beginPosition|gml:begin/gml:TimeInstant/gml:timePosition"/>
-                <xsl:with-param name="end" select="gml:endPosition|gml:end/gml:TimeInstant/gml:timePosition"/>
-              </xsl:call-template>
-            </xsl:variable>
-
-            <Field name="tempExtentBegin" string="{lower-case(substring-before($times,'|'))}" store="true" index="true"/>
-            <Field name="tempExtentEnd" string="{lower-case(substring-after($times,'|'))}" store="true" index="true"/>
+            <Field name="tempExtentBegin"
+                   string="{lower-case(gn-fn-iso19115-3:formatDateTime(gml:beginPosition|gml:begin/gml:TimeInstant/gml:timePosition))}"
+                   store="true" index="true"/>
+            <Field name="tempExtentEnd"
+                   string="{lower-case(gn-fn-iso19115-3:formatDateTime(gml:endPosition|gml:end/gml:TimeInstant/gml:timePosition))}"
+                   store="true" index="true"/>
           </xsl:for-each>
 
         </xsl:for-each>
@@ -700,7 +752,9 @@
     </xsl:for-each>
 
 
-
+    <xsl:for-each select="$metadata/mdb:metadataStandard/cit:CI_Citation/cit:title/gco:CharacterString">
+      <Field name="standardName" string="{string(.)}" store="true" index="true"/>
+    </xsl:for-each>
 
 
     <xsl:for-each select="$metadata/mdb:metadataIdentifier/mcc:MD_Identifier">
diff --git a/src/main/plugin/iso19115-3/update-fixed-info.xsl b/src/main/plugin/iso19115-3/update-fixed-info.xsl
index ffa7594..8c70d7b 100644
--- a/src/main/plugin/iso19115-3/update-fixed-info.xsl
+++ b/src/main/plugin/iso19115-3/update-fixed-info.xsl
@@ -1,24 +1,25 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"
-  xmlns:gml="http://www.opengis.net/gml/3.2" 
-  xmlns:srv="http://standards.iso.org/19115/-3/srv/2.0"
-  xmlns:gcx="http://standards.iso.org/19115/-3/gcx/1.0"
-  xmlns:gco="http://standards.iso.org/19115/-3/gco/1.0"
-  xmlns:mdb="http://standards.iso.org/19115/-3/mdb/1.0"
-  xmlns:mcc="http://standards.iso.org/19115/-3/mcc/1.0"
-  xmlns:mrc="http://standards.iso.org/19115/-3/mrc/1.0"
-  xmlns:lan="http://standards.iso.org/19115/-3/lan/1.0"
-  xmlns:cit="http://standards.iso.org/19115/-3/cit/1.0"
-  xmlns:dqm="http://standards.iso.org/19157/-2/dqm/1.0"
-  xmlns:gfc="http://standards.iso.org/19110/gfc/1.1"
-  xmlns:xlink="http://www.w3.org/1999/xlink"
-  xmlns:xs="http://www.w3.org/2001/XMLSchema"
-  xmlns:java="java:org.fao.geonet.util.XslUtil"
-  xmlns:gn="http://www.fao.org/geonetwork"
-  exclude-result-prefixes="#all">
-  
+                xmlns:gml="http://www.opengis.net/gml/3.2"
+                xmlns:srv="http://standards.iso.org/19115/-3/srv/2.0"
+                xmlns:gcx="http://standards.iso.org/19115/-3/gcx/1.0"
+                xmlns:gco="http://standards.iso.org/19115/-3/gco/1.0"
+                xmlns:mdb="http://standards.iso.org/19115/-3/mdb/1.0"
+                xmlns:mcc="http://standards.iso.org/19115/-3/mcc/1.0"
+                xmlns:mrc="http://standards.iso.org/19115/-3/mrc/1.0"
+                xmlns:lan="http://standards.iso.org/19115/-3/lan/1.0"
+                xmlns:cit="http://standards.iso.org/19115/-3/cit/1.0"
+                xmlns:dqm="http://standards.iso.org/19157/-2/dqm/1.0"
+                xmlns:gfc="http://standards.iso.org/19110/gfc/1.1"
+                xmlns:xlink="http://www.w3.org/1999/xlink"
+                xmlns:xs="http://www.w3.org/2001/XMLSchema"
+                xmlns:java="java:org.fao.geonet.util.XslUtil"
+                xmlns:mime="java:org.fao.geonet.util.MimeTypeFinder"
+                xmlns:gn="http://www.fao.org/geonetwork"
+                exclude-result-prefixes="#all">
+
   <xsl:import href="convert/create19115-3Namespaces.xsl"/>
-  
+
   <xsl:include href="convert/functions.xsl"/>
 
 
@@ -35,13 +36,13 @@
   <xsl:template match="/root">
     <xsl:apply-templates select="mdb:MD_Metadata"/>
   </xsl:template>
-  
+
   <xsl:template match="mdb:MD_Metadata">
     <xsl:copy copy-namespaces="no">
       <xsl:apply-templates select="@*"/>
-      
+
       <xsl:call-template name="add-iso19115-3-namespaces"/>
-      
+
       <!-- Add metadataIdentifier if it doesn't exist
       TODO: only if not harvested -->
       <mdb:metadataIdentifier>
@@ -58,9 +59,9 @@
         </mcc:MD_Identifier>
       </mdb:metadataIdentifier>
 
-  <!--    <xsl:apply-templates select="mdb:metadataIdentifier[
-                                    mcc:MD_Identifier/mcc:codeSpace/gco:CharacterString !=
-                                    $metadataIdentifierCodeSpace]"/>-->
+      <!--    <xsl:apply-templates select="mdb:metadataIdentifier[
+                                        mcc:MD_Identifier/mcc:codeSpace/gco:CharacterString !=
+                                        $metadataIdentifierCodeSpace]"/>-->
 
       <xsl:apply-templates select="mdb:defaultLocale"/>
       <xsl:apply-templates select="mdb:parentMetadata"/>
@@ -141,7 +142,7 @@
           <xsl:apply-templates select="mdb:metadataStandard"/>
         </xsl:otherwise>
       </xsl:choose>
-      
+
       <xsl:apply-templates select="mdb:metadataProfile"/>
       <xsl:apply-templates select="mdb:alternativeMetadataReference"/>
       <xsl:apply-templates select="mdb:otherLocale"/>
@@ -184,8 +185,8 @@
       <xsl:apply-templates select="mdb:acquisitionInformation"/>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <!-- Update revision date -->
   <xsl:template match="mdb:dateInfo[cit:CI_Date/cit:dateType/cit:CI_DateTypeCode/@codeListValue='lastUpdate']">
     <xsl:copy>
@@ -206,8 +207,8 @@
       </xsl:choose>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <xsl:template match="@gml:id">
     <xsl:choose>
       <xsl:when test="normalize-space(.)=''">
@@ -220,8 +221,8 @@
       </xsl:otherwise>
     </xsl:choose>
   </xsl:template>
-  
-  
+
+
   <!-- Fix srsName attribute generate CRS:84 (EPSG:4326 with long/lat 
     ordering) by default -->
   <xsl:template match="@srsName">
@@ -236,7 +237,7 @@
       </xsl:otherwise>
     </xsl:choose>
   </xsl:template>
-  
+
   <!-- Add required gml attributes if missing -->
   <xsl:template match="gml:Polygon[not(@gml:id) and not(@srsName)]">
     <xsl:copy>
@@ -250,8 +251,8 @@
       <xsl:copy-of select="*"/>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <xsl:template match="*[gco:CharacterString]">
     <xsl:copy>
       <xsl:apply-templates select="@*[not(name()='gco:nilReason')]"/>
@@ -271,15 +272,15 @@
       <xsl:apply-templates select="node()"/>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <!-- codelists: set @codeList path -->
   <xsl:template match="lan:LanguageCode[@codeListValue]" priority="10">
     <lan:LanguageCode codeList="http://www.loc.gov/standards/iso639-2/">
       <xsl:apply-templates select="@*[name(.)!='codeList']"/>
     </lan:LanguageCode>
   </xsl:template>
-  
+
   <xsl:template match="dqm:*[@codeListValue]" priority="10">
     <xsl:copy>
       <xsl:apply-templates select="@*"/>
@@ -288,7 +289,7 @@
       </xsl:attribute>
     </xsl:copy>
   </xsl:template>
-  
+
   <xsl:template match="*[@codeListValue]">
     <xsl:copy>
       <xsl:apply-templates select="@*"/>
@@ -297,18 +298,13 @@
       </xsl:attribute>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <!-- online resources: download -->
-  <xsl:template match="cit:CI_OnlineResource[matches(cit:protocol/gco:CharacterString,'^WWW:DOWNLOAD-.*-http--download.*') and cit:name]">
+  <xsl:template match="cit:CI_OnlineResource[matches(cit:protocol/gco:CharacterString,'^WWW:DOWNLOAD.*') and cit:name]">
     <xsl:variable name="fname" select="cit:name/gco:CharacterString|cit:name/gcx:MimeFileType"/>
-    <xsl:variable name="mimeType">
-      <xsl:call-template name="getMimeTypeFile">
-        <xsl:with-param name="datadir" select="/root/env/datadir"/>
-        <xsl:with-param name="fname" select="$fname"/>
-      </xsl:call-template>
-    </xsl:variable>
-    
+    <xsl:variable name="mimeType" select="mime:detectMimeTypeFile(/root/env/datadir, $fname)"/>
+
     <xsl:copy>
       <xsl:copy-of select="@*"/>
       <cit:linkage>
@@ -337,16 +333,12 @@
       <xsl:copy-of select="cit:function"/>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <!-- online resources: link-to-downloadable data etc -->
   <xsl:template match="cit:CI_OnlineResource[starts-with(cit:protocol/gco:CharacterString,'WWW:LINK-') and contains(cit:protocol/gco:CharacterString,'http--download')]">
-    <xsl:variable name="mimeType">
-      <xsl:call-template name="getMimeTypeUrl">
-        <xsl:with-param name="linkage" select="cit:linkage/gco:CharacterString"/>
-      </xsl:call-template>
-    </xsl:variable>
-    
+    <xsl:variable name="mimeType" select="mime:detectMimeTypeUrl(cit:linkage/gco:CharacterString)"/>
+
     <xsl:copy>
       <xsl:copy-of select="@*"/>
       <xsl:copy-of select="cit:linkage"/>
@@ -359,7 +351,7 @@
       <xsl:copy-of select="cit:function"/>
     </xsl:copy>
   </xsl:template>
-  
+
   <xsl:template match="gcx:FileName[name(..)!='cit:contactInstructions']">
     <xsl:copy>
       <xsl:attribute name="src">
@@ -378,8 +370,8 @@
       <xsl:value-of select="."/>
     </xsl:copy>
   </xsl:template>
-  
-  
+
+
   <!-- Do not allow to expand operatesOn sub-elements 
     and constrain users to use uuidref attribute to link
     service metadata to datasets. This will avoid to have
@@ -398,13 +390,13 @@
             <xsl:copy-of select="@xlink:href"/>
           </xsl:otherwise>
         </xsl:choose>
-        
+
       </xsl:if>
     </xsl:copy>
-    
+
   </xsl:template>
-  
-  
+
+
   <!-- Set local identifier to the first 3 letters of iso code. Locale ids
     are used for multilingual charcterString using #iso2code for referencing.
   -->
@@ -412,7 +404,7 @@
     <xsl:element name="lan:{local-name()}">
       <xsl:variable name="id"
                     select="upper-case(java:twoCharLangCode(lan:language/lan:LanguageCode/@codeListValue))"/>
-      
+
       <xsl:apply-templates select="@*"/>
       <xsl:if test="normalize-space(@id)='' or normalize-space(@id)!=$id">
         <xsl:attribute name="id">
@@ -422,10 +414,10 @@
       <xsl:apply-templates select="node()"/>
     </xsl:element>
   </xsl:template>
-  
+
   <!-- Apply same changes as above to the lan:LocalisedCharacterString -->
   <xsl:variable name="language" select="//(mdb:defaultLocale|mdb:otherLocale)/lan:PT_Locale" /> <!-- Need list of all locale -->
-  
+
   <xsl:template match="lan:LocalisedCharacterString">
     <xsl:element name="lan:{local-name()}">
       <xsl:variable name="currentLocale" select="upper-case(replace(normalize-space(@locale), '^#', ''))"/>
@@ -440,7 +432,7 @@
       <xsl:apply-templates select="node()"/>
     </xsl:element>
   </xsl:template>
-  
+
   <!-- ================================================================= -->
   <!-- Adjust the namespace declaration - In some cases name() is used to get the 
     element. The assumption is that the name is in the format of  <ns:element> 
@@ -450,7 +442,7 @@
   <!-- Note: Only included prefix gml, mds and gco for now. -->
   <!-- TODO: Figure out how to get the namespace prefix via a function so that we don't need to hard code them -->
   <!-- ================================================================= -->
-  
+
   <xsl:template name="correct_ns_prefix">
     <xsl:param name="element" />
     <xsl:param name="prefix" />
@@ -467,34 +459,34 @@
       </xsl:otherwise>
     </xsl:choose>
   </xsl:template>
-  
+
   <xsl:template match="mdb:*">
     <xsl:call-template name="correct_ns_prefix">
       <xsl:with-param name="element" select="."/>
       <xsl:with-param name="prefix" select="'mdb'"/>
     </xsl:call-template>
   </xsl:template>
-  
+
   <xsl:template match="gco:*">
     <xsl:call-template name="correct_ns_prefix">
       <xsl:with-param name="element" select="."/>
       <xsl:with-param name="prefix" select="'gco'"/>
     </xsl:call-template>
   </xsl:template>
-  
+
   <xsl:template match="gml:*">
     <xsl:call-template name="correct_ns_prefix">
       <xsl:with-param name="element" select="."/>
       <xsl:with-param name="prefix" select="'gml'"/>
     </xsl:call-template>
   </xsl:template>
-  
+
   <!-- copy everything else as is -->
-  
+
   <xsl:template match="@*|node()">
     <xsl:copy>
       <xsl:apply-templates select="@*|node()"/>
     </xsl:copy>
   </xsl:template>
-  
-</xsl:stylesheet>
+
+</xsl:stylesheet>
\ No newline at end of file
